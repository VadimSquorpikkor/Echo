package com.squorpikkor.echo_2;

import static com.squorpikkor.echo_2.Constant.CHANGE_STATE_CONTROL_REGISTER;
import static com.squorpikkor.echo_2.Constant.READ_ACCUMULATED_SPECTRUM_COMPRESSED_REBOOT;
import static com.squorpikkor.echo_2.Constant.READ_CALIBRATION_DATA_SAMPLE;
import static com.squorpikkor.echo_2.Constant.READ_DEVICE_ID;
import static com.squorpikkor.echo_2.Constant.READ_SPECTRUM_NON_VOLATILE_MEMORY;
import static com.squorpikkor.echo_2.Constant.READ_STATE_DATA_REGISTERS;
import static com.squorpikkor.echo_2.Constant.SEND_CONTROL_SIGNAL;

import android.util.Log;

import java.util.Arrays;

class Response {


    DataRegister dataRegister;

    public Response(DataRegister dataRegister) {
        this.dataRegister = dataRegister;
    }

    public byte[] getResponseByRequest(byte[] request) {
        if (request.length<2) return null;
        Log.e("TAG", ">>> "+ Arrays.toString(request));
        byte[] response;
        switch (request[1]) {
            case READ_DEVICE_ID: response = getDeviceId(request);break;
            case READ_STATE_DATA_REGISTERS: response = getDataRegisters(request);break;
            case READ_CALIBRATION_DATA_SAMPLE: response = getCalibrationDataSample(request);break;
            case READ_SPECTRUM_NON_VOLATILE_MEMORY: response = getReadSpectrumNonVolatileMemory(request);break;
            case SEND_CONTROL_SIGNAL: response = getSendControlSignal(request);break;
            case CHANGE_STATE_CONTROL_REGISTER: response = getChangeStateControlRegister(request);break;
            case READ_ACCUMULATED_SPECTRUM_COMPRESSED_REBOOT: response = getAccumulatedSpectrumCompressedReboot(request);break;
            //case READ_STATE_DATA_REGISTERS: response = getReadStateDataRegister(request);break;
            default: return null;
        }
        Log.e("TAG", "<<<: "+Arrays.toString(response));
        return response;
    }

    private static byte[] getAccumulatedSpectrumCompressedReboot(byte[] request) {
        return new byte[]{1, 65, 4, 6, 0, 0, 0, 0, 0, 0, 0, 7, -5, 1, 5, -3, 4, -3, -2, 6, 0, 0, 1, -2, 2, 6, -2, 7, 3, -6, 7, -2, -4, 2, 10, -11, 2, 9, -8, 0, -4, -3, 1, 7, -4, -1, -4, 18, -19, -3, 11, -8, 1, 5, -9, -1, 1, 4, 2, -4, -4, 6, -8, 16, -10, 4, -7, 0, 3, -4, 3, 0, -1, -4, 5, 0, -6, 3, -2, 3, -5, 4, -3, 3, -2, -2, 2, -1, -3, 5, -1, 1, -8, 4, 0, -1, 7, -3, -4, 0, 0, -2, 0, 8, -5, -4, 6, -5, 4, -2, 0, 1, -1, -1, 0, 0, 1, -3, 3, -1, -2, 5, -3, 1, -2, 8, -9, 4, 1, -5, -1, 3, -2, 4, -5, 1, 1, 1, 3, -6, 3, -2, -1, 2, 1, -2, 1, 0, -1, -1, 3, -1, 1, -2, 0, -1, 1, 3, -2, 0, -2, 7, -7, 2, -1, 1, -1, 1, -1, 2, -2, 2, -1, 0, -2, 3, 0, -1, -2, 2, -1, 0, 2, 0, -2, 1, -2, 0, 1, 0, 1, 1, -2, 1, -2, 1, 1, -1, 0, 1, -1, 0, 2, -1, -1, 0, 0, 0, -1, 0, 1, -1, 1, -1, 2, -1, -1, 2, -1, -1, 1, 1, -2, 0, 1, 0, -1, 2, -2, 1, -1, 0, 0, 0, 1, 1, -2, 1, 1, -2, 1, 1, -2, 0, 1, 1, -2, 0, 0, 0, 2, 0, -2, 1, 0, -1, 0, 0, 1, -1, 2, -1, -1, 1, 0, 0, 0, -1, 1, 0, -1, 0, 1, -1, 1, -1, 1, -1, 0, 0, 1, 0, -1, 1, -1, 2, -1, -1, 0, 0, 0, 1, -1, 1, -1, 2, -1, -1, 0, 1, -1, 1, 1, -1, 1, -2, 2, -1, 0, 1, -2, 0, 0, 0, 0, 1, 0, -1, 0, 1, -1, 0, 2, 1, -3, 1, -1, 0, 1, 0, -1, 1, -1, 3, -3, 0, 0, 0, 1, -1, 0, 1, -1, 0, 0, 1, -1, 1, 0, 0, -1, 0, 1, 0, 0, -1, 0, 0, 0, 0, 1, -1, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 1, -1, 0, 1, 0, -1, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, 1, -1, 0, 0, 0, 1, -1, 0, 1, -1, 1, -1, 0, 1, 0, -1, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 1, -1, 0, 1, -1, 1, -1, 1, 0, -1, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, -2, 2, -2, 1, -1, 1, 0, -1, 0, 1, -1, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 2, -2, 0, 2, -1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 1, -1, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, -17, -113};
    }

    private static byte[] getReadStateDataRegister(byte[] request) {
        return new byte[]{1, 4, -98, 0, 0, 25, -80, 0, 0, 1, 44, 67, -97, -61, -110, 64, -91, -37, 71, 51, -41, 102, -34, 65, 63, -107, 106, 48, 19, 120, -48, 0, 0, 0, 0, 0, -78, 0, 91, 0, 0, 0, 21, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 19, 3, 19, 0, 0, 0, 0, 15, 15, 0, 25, 2, -111, -1, -9, 0, -90, 0, -90, 0, 12, 0, 8, 0, -73, 0, -73, 0, 48, 57, -127, 0, 48, 56, -80, 0, 48, 57, 108, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 44, 90, 27};
    }

    private static byte[] getChangeStateControlRegister(byte[] request) {
        //>>> [1, 6, 0, 0, 0, 5, -55, 73]
        return request;
    }

    private static byte[] getSendControlSignal(byte[] request) {
        //>>> [1, 5, 0, 6, -1, 0, 59, 108]
        return request;
    }

//     >>> [1, 65, 16, -64]
//    E: <<< [1, 65, 4, 6, 0, 0, 0, 0, 0, 0, 0, 7, -5, 1, 5, -3, 4, -3, -2, 6, 0, 0, 1, -2, 2, 6, -2, 7, 3, -6, 7, -2, -4, 2, 10, -11, 2, 9, -8, 0, -4, -3, 1, 7, -4, -1, -4, 18, -19, -3, 11, -8, 1, 5, -9, -1, 1, 4, 2, -4, -4, 6, -8, 16, -10, 4, -7, 0, 3, -4, 3, 0, -1, -4, 5, 0, -6, 3, -2, 3, -5, 4, -3, 3, -2, -2, 2, -1, -3, 5, -1, 1, -8, 4, 0, -1, 7, -3, -4, 0, 0, -2, 0, 8, -5, -4, 6, -5, 4, -2, 0, 1, -1, -1, 0, 0, 1, -3, 3, -1, -2, 5, -3, 1, -2, 8, -9, 4, 1, -5, -1, 3, -2, 4, -5, 1, 1, 1, 3, -6, 3, -2, -1, 2, 1, -2, 1, 0, -1, -1, 3, -1, 1, -2, 0, -1, 1, 3, -2, 0, -2, 7, -7, 2, -1, 1, -1, 1, -1, 2, -2, 2, -1, 0, -2, 3, 0, -1, -2, 2, -1, 0, 2, 0, -2, 1, -2, 0, 1, 0, 1, 1, -2, 1, -2, 1, 1, -1, 0, 1, -1, 0, 2, -1, -1, 0, 0, 0, -1, 0, 1, -1, 1, -1, 2, -1, -1, 2, -1, -1, 1, 1, -2, 0, 1, 0, -1, 2, -2, 1, -1, 0, 0, 0, 1, 1, -2, 1, 1, -2, 1, 1, -2, 0, 1, 1, -2, 0, 0, 0, 2, 0, -2, 1, 0, -1, 0, 0, 1, -1, 2, -1, -1, 1, 0, 0, 0, -1, 1, 0, -1, 0, 1, -1, 1, -1, 1, -1, 0, 0, 1, 0, -1, 1, -1, 2, -1, -1, 0, 0, 0, 1, -1, 1, -1, 2, -1, -1, 0, 1, -1, 1, 1, -1, 1, -2, 2, -1, 0, 1, -2, 0, 0, 0, 0, 1, 0, -1, 0, 1, -1, 0, 2, 1, -3, 1, -1, 0, 1, 0, -1, 1, -1, 3, -3, 0, 0, 0, 1, -1, 0, 1, -1, 0, 0, 1, -1, 1, 0, 0, -1, 0, 1, 0, 0, -1, 0, 0, 0, 0, 1, -1, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 1, -1, 0, 1, 0, -1, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, 1, -1, 0, 0, 0, 1, -1, 0, 1, -1, 1, -1, 0, 1, 0, -1, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 1, -1, 0, 1, -1, 1, -1, 1, 0, -1, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, -2, 2, -2, 1, -1, 1, 0, -1, 0, 1, -1, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 2, -2, 0, 2, -1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 1, -1, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 0, 0, -17, -113]

    private static byte[] getReadSpectrumNonVolatileMemory(byte[] request) {
        byte[] r1 = new byte[]{1, 9, -16, 0, 0, 0, 0, 0, 3, 0, 0, 6, 0, 0, 9, 0, 0, 11, 0, 0, 14, 0, 0, 17, 0, 0, 20, 0, 0, 23, 0, 0, 26, 0, 0, 29, 0, 0, 32, 0, 0, 35, 0, 0, 37, 0, 0, 40, 0, 0, 43, 0, 0, 45, 0, 0, 48, 0, 0, 50, 0, 0, 53, 0, 0, 56, 0, 0, 58, 0, 0, 61, 0, 0, 64, 0, 0, 67, 0, 0, 69, 0, 0, 72, 0, 0, 75, 0, 0, 78, 0, 0, 80, 0, 0, 83, 0, 0, 86, 0, 0, 89, 0, 0, 91, 0, 0, 94, 0, 0, 97, 0, 0, 100, 0, 0, 103, 0, 0, 106, 0, 0, 109, 0, 0, 112, 0, 0, 115, 0, 0, 118, 0, 0, 122, 0, 0, 125, 0, 0, -128, 0, 0, -125, 0, 0, -122, 0, 0, -119, 0, 0, -116, 0, 0, -113, 0, 0, -110, 0, 0, -107, 0, 0, -104, 0, 0, -101, 0, 0, -97, 0, 0, -94, 0, 0, -91, 0, 0, -88, 0, 0, -85, 0, 0, -82, 0, 0, -79, 0, 0, -76, 0, 0, -73, 0, 0, -70, 0, 0, -67, 0, 0, -64, 0, 0, -61, 0, 0, -58, 0, 0, -55, 0, 0, -52, 0, 0, -49, 0, 0, -45, 0, 0, -42, 0, 0, -39, 0, 0, -36, 0, 0, -33, 0, 0, -30, 0, 0, -27, 0, 0, -24, -43, -73};
        byte[] r2 = new byte[]{1, 9, -16, 0, 0, -21, 0, 0, -18, 0, 0, -15, 0, 0, -12, 0, 0, -9, 0, 0, -6, 0, 0, -3, 0, 1, 0, 0, 1, 3, 0, 1, 6, 0, 1, 9, 0, 1, 12, 0, 1, 15, 0, 1, 18, 0, 1, 20, 0, 1, 23, 0, 1, 26, 0, 1, 29, 0, 1, 32, 0, 1, 35, 0, 1, 38, 0, 1, 41, 0, 1, 44, 0, 1, 47, 0, 1, 50, 0, 1, 53, 0, 1, 56, 0, 1, 59, 0, 1, 62, 0, 1, 65, 0, 1, 68, 0, 1, 71, 0, 1, 74, 0, 1, 77, 0, 1, 80, 0, 1, 83, 0, 1, 86, 0, 1, 89, 0, 1, 92, 0, 1, 95, 0, 1, 98, 0, 1, 101, 0, 1, 104, 0, 1, 107, 0, 1, 110, 0, 1, 113, 0, 1, 116, 0, 1, 119, 0, 1, 122, 0, 1, 125, 0, 1, -128, 0, 1, -125, 0, 1, -122, 0, 1, -119, 0, 1, -116, 0, 1, -113, 0, 1, -110, 0, 1, -107, 0, 1, -103, 0, 1, -100, 0, 1, -97, 0, 1, -94, 0, 1, -91, 0, 1, -88, 0, 1, -85, 0, 1, -82, 0, 1, -79, 0, 1, -76, 0, 1, -73, 0, 1, -70, 0, 1, -67, 0, 1, -64, 0, 1, -60, 0, 1, -57, 0, 1, -54, 0, 1, -51, 0, 1, -48, 0, 1, -45, 0, 1, -42, 0, 1, -39, -75, 59};
        byte[] r3 = new byte[]{1, 9, -16, 0, 1, -36, 0, 1, -33, 0, 1, -30, 0, 1, -27, 0, 1, -23, 0, 1, -20, 0, 1, -17, 0, 1, -14, 0, 1, -11, 0, 1, -8, 0, 1, -5, 0, 1, -2, 0, 2, 1, 0, 2, 4, 0, 2, 7, 0, 2, 10, 0, 2, 14, 0, 2, 17, 0, 2, 20, 0, 2, 23, 0, 2, 26, 0, 2, 29, 0, 2, 32, 0, 2, 35, 0, 2, 38, 0, 2, 41, 0, 2, 44, 0, 2, 47, 0, 2, 50, 0, 2, 53, 0, 2, 57, 0, 2, 60, 0, 2, 63, 0, 2, 66, 0, 2, 69, 0, 2, 72, 0, 2, 75, 0, 2, 78, 0, 2, 81, 0, 2, 84, 0, 2, 87, 0, 2, 90, 0, 2, 93, 0, 2, 96, 0, 2, 99, 0, 2, 102, 0, 2, 105, 0, 2, 108, 0, 2, 111, 0, 2, 114, 0, 2, 117, 0, 2, 120, 0, 2, 123, 0, 2, 127, 0, 2, -126, 0, 2, -123, 0, 2, -120, 0, 2, -117, 0, 2, -114, 0, 2, -111, 0, 2, -108, 0, 2, -105, 0, 2, -102, 0, 2, -99, 0, 2, -96, 0, 2, -93, 0, 2, -90, 0, 2, -87, 0, 2, -84, 0, 2, -81, 0, 2, -77, 0, 2, -74, 0, 2, -71, 0, 2, -68, 0, 2, -65, 0, 2, -62, 0, 2, -59, 0, 2, -56, 0, 2, -53, 0, 2, -50, -93, -86};
        byte[] r4 = new byte[]{1, 9, -16, 0, 2, -47, 0, 2, -43, 0, 2, -40, 0, 2, -37, 0, 2, -34, 0, 2, -31, 0, 2, -28, 0, 2, -25, 0, 2, -22, 0, 2, -19, 0, 2, -16, 0, 2, -13, 0, 2, -10, 0, 2, -7, 0, 2, -3, 0, 3, 0, 0, 3, 3, 0, 3, 6, 0, 3, 9, 0, 3, 12, 0, 3, 15, 0, 3, 18, 0, 3, 21, 0, 3, 24, 0, 3, 27, 0, 3, 30, 0, 3, 33, 0, 3, 36, 0, 3, 39, 0, 3, 42, 0, 3, 45, 0, 3, 48, 0, 3, 51, 0, 3, 54, 0, 3, 57, 0, 3, 60, 0, 3, 63, 0, 3, 66, 0, 3, 69, 0, 3, 72, 0, 3, 75, 0, 3, 78, 0, 3, 81, 0, 3, 84, 0, 3, 87, 0, 3, 90, 0, 3, 94, 0, 3, 97, 0, 3, 100, 0, 3, 103, 0, 3, 106, 0, 3, 109, 0, 3, 112, 0, 3, 115, 0, 3, 118, 0, 3, 121, 0, 3, 124, 0, 3, 127, 0, 3, -126, 0, 3, -123, 0, 3, -120, 0, 3, -117, 0, 3, -114, 0, 3, -111, 0, 3, -108, 0, 3, -105, 0, 3, -101, 0, 3, -98, 0, 3, -95, 0, 3, -92, 0, 3, -89, 0, 3, -86, 0, 3, -83, 0, 3, -80, 0, 3, -77, 0, 3, -74, 0, 3, -71, 0, 3, -68, 0, 3, -65, 0, 3, -62, 26, -28};
        byte[] r5 = new byte[]{1, 9, -16, 0, 3, -59, 0, 3, -55, 0, 3, -52, 0, 3, -49, 0, 3, -46, 0, 3, -43, 0, 3, -40, 0, 3, -37, 0, 3, -34, 0, 3, -31, 0, 3, -28, 0, 3, -25, 0, 3, -22, 0, 3, -19, 0, 3, -16, 0, 3, -13, 0, 3, -10, 0, 3, -7, 0, 3, -3, 0, 4, 0, 0, 4, 3, 0, 4, 6, 0, 4, 9, 0, 4, 12, 0, 4, 15, 0, 4, 18, 0, 4, 21, 0, 4, 24, 0, 4, 27, 0, 4, 30, 0, 4, 33, 0, 4, 36, 0, 4, 39, 0, 4, 42, 0, 4, 45, 0, 4, 48, 0, 4, 51, 0, 4, 54, 0, 4, 58, 0, 4, 61, 0, 4, 64, 0, 4, 67, 0, 4, 70, 0, 4, 73, 0, 4, 76, 0, 4, 79, 0, 4, 82, 0, 4, 85, 0, 4, 88, 0, 4, 91, 0, 4, 94, 0, 4, 97, 0, 4, 100, 0, 4, 103, 0, 4, 106, 0, 4, 109, 0, 4, 112, 0, 4, 115, 0, 4, 118, 0, 4, 121, 0, 4, 124, 0, 4, 127, 0, 4, -125, 0, 4, -122, 0, 4, -119, 0, 4, -116, 0, 4, -113, 0, 4, -110, 0, 4, -107, 0, 4, -104, 0, 4, -101, 0, 4, -98, 0, 4, -95, 0, 4, -92, 0, 4, -89, 0, 4, -86, 0, 4, -83, 0, 4, -80, 0, 4, -77, 0, 4, -74, 104, -2};
        byte[] r6 = new byte[]{1, 9, -16, 0, 4, -71, 0, 4, -68, 0, 4, -65, 0, 4, -62, 0, 4, -59, 0, 4, -56, 0, 4, -53, 0, 4, -50, 0, 4, -47, 0, 4, -44, 0, 4, -41, 0, 4, -38, 0, 4, -34, 0, 4, -31, 0, 4, -28, 0, 4, -25, 0, 4, -22, 0, 4, -19, 0, 4, -16, 0, 4, -13, 0, 4, -10, 0, 4, -7, 0, 4, -4, 0, 4, -1, 0, 5, 2, 0, 5, 5, 0, 5, 8, 0, 5, 11, 0, 5, 14, 0, 5, 17, 0, 5, 20, 0, 5, 23, 0, 5, 26, 0, 5, 29, 0, 5, 32, 0, 5, 35, 0, 5, 38, 0, 5, 41, 0, 5, 44, 0, 5, 47, 0, 5, 50, 0, 5, 53, 0, 5, 56, 0, 5, 59, 0, 5, 62, 0, 5, 65, 0, 5, 68, 0, 5, 71, 0, 5, 74, 0, 5, 77, 0, 5, 81, 0, 5, 84, 0, 5, 87, 0, 5, 90, 0, 5, 93, 0, 5, 96, 0, 5, 99, 0, 5, 102, 0, 5, 105, 0, 5, 108, 0, 5, 111, 0, 5, 114, 0, 5, 117, 0, 5, 120, 0, 5, 123, 0, 5, 126, 0, 5, -127, 0, 5, -124, 0, 5, -121, 0, 5, -118, 0, 5, -115, 0, 5, -112, 0, 5, -109, 0, 5, -106, 0, 5, -103, 0, 5, -100, 0, 5, -97, 0, 5, -94, 0, 5, -91, 0, 5, -88, 47, -74};
        byte[] r7 = new byte[]{1, 9, -16, 0, 5, -85, 0, 5, -82, 0, 5, -79, 0, 5, -76, 0, 5, -73, 0, 5, -70, 0, 5, -67, 0, 5, -64, 0, 5, -61, 0, 5, -58, 0, 5, -55, 0, 5, -51, 0, 5, -48, 0, 5, -45, 0, 5, -42, 0, 5, -39, 0, 5, -36, 0, 5, -33, 0, 5, -30, 0, 5, -27, 0, 5, -24, 0, 5, -21, 0, 5, -18, 0, 5, -15, 0, 5, -12, 0, 5, -9, 0, 5, -6, 0, 5, -3, 0, 6, 0, 0, 6, 3, 0, 6, 6, 0, 6, 9, 0, 6, 12, 0, 6, 15, 0, 6, 18, 0, 6, 21, 0, 6, 24, 0, 6, 27, 0, 6, 30, 0, 6, 33, 0, 6, 36, 0, 6, 39, 0, 6, 42, 0, 6, 45, 0, 6, 48, 0, 6, 51, 0, 6, 54, 0, 6, 57, 0, 6, 60, 0, 6, 63, 0, 6, 66, 0, 6, 69, 0, 6, 72, 0, 6, 76, 0, 6, 79, 0, 6, 82, 0, 6, 85, 0, 6, 88, 0, 6, 91, 0, 6, 94, 0, 6, 97, 0, 6, 100, 0, 6, 103, 0, 6, 106, 0, 6, 109, 0, 6, 112, 0, 6, 115, 0, 6, 118, 0, 6, 121, 0, 6, 124, 0, 6, 127, 0, 6, -126, 0, 6, -123, 0, 6, -120, 0, 6, -117, 0, 6, -114, 0, 6, -111, 0, 6, -108, 0, 6, -105, 0, 6, -102, -77, 27};
        byte[] r8 = new byte[]{1, 9, -16, 0, 6, -99, 0, 6, -96, 0, 6, -93, 0, 6, -90, 0, 6, -87, 0, 6, -84, 0, 6, -81, 0, 6, -78, 0, 6, -75, 0, 6, -72, 0, 6, -69, 0, 6, -66, 0, 6, -63, 0, 6, -60, 0, 6, -57, 0, 6, -53, 0, 6, -50, 0, 6, -47, 0, 6, -44, 0, 6, -41, 0, 6, -38, 0, 6, -35, 0, 6, -32, 0, 6, -29, 0, 6, -26, 0, 6, -23, 0, 6, -20, 0, 6, -17, 0, 6, -14, 0, 6, -11, 0, 6, -8, 0, 6, -5, 0, 6, -2, 0, 7, 1, 0, 7, 4, 0, 7, 7, 0, 7, 10, 0, 7, 13, 0, 7, 16, 0, 7, 19, 0, 7, 22, 0, 7, 25, 0, 7, 28, 0, 7, 31, 0, 7, 34, 0, 7, 37, 0, 7, 40, 0, 7, 43, 0, 7, 46, 0, 7, 49, 0, 7, 52, 0, 7, 55, 0, 7, 58, 0, 7, 61, 0, 7, 64, 0, 7, 67, 0, 7, 70, 0, 7, 74, 0, 7, 77, 0, 7, 80, 0, 7, 83, 0, 7, 86, 0, 7, 89, 0, 7, 92, 0, 7, 95, 0, 7, 98, 0, 7, 101, 0, 7, 104, 0, 7, 107, 0, 7, 110, 0, 7, 113, 0, 7, 116, 0, 7, 119, 0, 7, 122, 0, 7, 125, 0, 7, -128, 0, 7, -125, 0, 7, -122, 0, 7, -119, 0, 7, -116, -37, 70};
        byte[] r9 = new byte[]{1, 9, -16, 0, 7, -113, 0, 7, -110, 0, 7, -107, 0, 7, -104, 0, 7, -101, 0, 7, -98, 0, 7, -95, 0, 7, -92, 0, 7, -89, 0, 7, -86, 0, 7, -83, 0, 7, -80, 0, 7, -77, 0, 7, -74, 0, 7, -71, 0, 7, -68, 0, 7, -65, 0, 7, -62, 0, 7, -58, 0, 7, -55, 0, 7, -52, 0, 7, -49, 0, 7, -46, 0, 7, -43, 0, 7, -40, 0, 7, -37, 0, 7, -34, 0, 7, -31, 0, 7, -28, 0, 7, -25, 0, 7, -22, 0, 7, -19, 0, 7, -16, 0, 7, -13, 0, 7, -10, 0, 7, -7, 0, 7, -4, 0, 7, -1, 0, 8, 2, 0, 8, 5, 0, 8, 8, 0, 8, 11, 0, 8, 14, 0, 8, 17, 0, 8, 20, 0, 8, 23, 0, 8, 26, 0, 8, 29, 0, 8, 32, 0, 8, 35, 0, 8, 38, 0, 8, 41, 0, 8, 44, 0, 8, 47, 0, 8, 50, 0, 8, 53, 0, 8, 56, 0, 8, 59, 0, 8, 63, 0, 8, 66, 0, 8, 69, 0, 8, 72, 0, 8, 75, 0, 8, 78, 0, 8, 81, 0, 8, 84, 0, 8, 87, 0, 8, 90, 0, 8, 93, 0, 8, 96, 0, 8, 99, 0, 8, 102, 0, 8, 105, 0, 8, 108, 0, 8, 111, 0, 8, 114, 0, 8, 117, 0, 8, 120, 0, 8, 123, 0, 8, 126, -21, 117};
        byte[] r10 = new byte[]{1, 9, -16, 0, 8, -127, 0, 8, -124, 0, 8, -121, 0, 8, -118, 0, 8, -115, 0, 8, -112, 0, 8, -109, 0, 8, -106, 0, 8, -103, 0, 8, -100, 0, 8, -97, 0, 8, -94, 0, 8, -91, 0, 8, -88, 0, 8, -85, 0, 8, -82, 0, 8, -79, 0, 8, -75, 0, 8, -72, 0, 8, -69, 0, 8, -66, 0, 8, -63, 0, 8, -60, 0, 8, -57, 0, 8, -54, 0, 8, -51, 0, 8, -48, 0, 8, -45, 0, 8, -42, 0, 8, -39, 0, 8, -36, 0, 8, -33, 0, 8, -30, 0, 8, -27, 0, 8, -24, 0, 8, -21, 0, 8, -18, 0, 8, -15, 0, 8, -12, 0, 8, -9, 0, 8, -6, 0, 8, -3, 0, 9, 0, 0, 9, 3, 0, 9, 6, 0, 9, 9, 0, 9, 12, 0, 9, 15, 0, 9, 18, 0, 9, 21, 0, 9, 24, 0, 9, 27, 0, 9, 30, 0, 9, 33, 0, 9, 36, 0, 9, 40, 0, 9, 43, 0, 9, 46, 0, 9, 49, 0, 9, 52, 0, 9, 55, 0, 9, 58, 0, 9, 61, 0, 9, 64, 0, 9, 67, 0, 9, 70, 0, 9, 73, 0, 9, 76, 0, 9, 79, 0, 9, 82, 0, 9, 85, 0, 9, 88, 0, 9, 91, 0, 9, 94, 0, 9, 97, 0, 9, 100, 0, 9, 103, 0, 9, 106, 0, 9, 109, 0, 9, 112, -95, 61};
        byte[] r11 = new byte[]{1, 9, -16, 0, 9, 115, 0, 9, 118, 0, 9, 121, 0, 9, 124, 0, 9, 127, 0, 9, -126, 0, 9, -123, 0, 9, -120, 0, 9, -117, 0, 9, -114, 0, 9, -111, 0, 9, -108, 0, 9, -104, 0, 9, -101, 0, 9, -98, 0, 9, -95, 0, 9, -92, 0, 9, -89, 0, 9, -86, 0, 9, -83, 0, 9, -80, 0, 9, -77, 0, 9, -74, 0, 9, -71, 0, 9, -68, 0, 9, -65, 0, 9, -62, 0, 9, -59, 0, 9, -56, 0, 9, -53, 0, 9, -50, 0, 9, -47, 0, 9, -44, 0, 9, -41, 0, 9, -38, 0, 9, -35, 0, 9, -32, 0, 9, -29, 0, 9, -26, 0, 9, -23, 0, 9, -20, 0, 9, -17, 0, 9, -14, 0, 9, -11, 0, 9, -8, 0, 9, -5, 0, 9, -2, 0, 10, 1, 0, 10, 5, 0, 10, 8, 0, 10, 11, 0, 10, 14, 0, 10, 17, 0, 10, 20, 0, 10, 23, 0, 10, 26, 0, 10, 29, 0, 10, 32, 0, 10, 35, 0, 10, 38, 0, 10, 41, 0, 10, 44, 0, 10, 47, 0, 10, 50, 0, 10, 53, 0, 10, 56, 0, 10, 59, 0, 10, 62, 0, 10, 65, 0, 10, 68, 0, 10, 71, 0, 10, 74, 0, 10, 77, 0, 10, 80, 0, 10, 83, 0, 10, 86, 0, 10, 89, 0, 10, 92, 0, 10, 95, 0, 10, 98, 122, 8};
        byte[] r12 = new byte[]{1, 9, -16, 0, 10, 101, 0, 10, 104, 0, 10, 108, 0, 10, 111, 0, 10, 114, 0, 10, 117, 0, 10, 120, 0, 10, 123, 0, 10, 126, 0, 10, -127, 0, 10, -124, 0, 10, -121, 0, 10, -118, 0, 10, -115, 0, 10, -112, 0, 10, -109, 0, 10, -106, 0, 10, -103, 0, 10, -100, 0, 10, -97, 0, 10, -94, 0, 10, -91, 0, 10, -88, 0, 10, -85, 0, 10, -82, 0, 10, -79, 0, 10, -76, 0, 10, -73, 0, 10, -70, 0, 10, -67, 0, 10, -64, 0, 10, -61, 0, 10, -58, 0, 10, -55, 0, 10, -51, 0, 10, -48, 0, 10, -45, 0, 10, -42, 0, 10, -39, 0, 10, -36, 0, 10, -33, 0, 10, -30, 0, 10, -27, 0, 10, -24, 0, 10, -21, 0, 10, -18, 0, 10, -15, 0, 10, -12, 0, 10, -9, 0, 10, -6, 0, 10, -3, 0, 11, 0, 0, 11, 3, 0, 11, 6, 0, 11, 9, 0, 11, 12, 0, 11, 15, 0, 11, 18, 0, 11, 21, 0, 11, 24, 0, 11, 27, 0, 11, 30, 0, 11, 33, 0, 11, 36, 0, 11, 39, 0, 11, 42, 0, 11, 46, 0, 11, 49, 0, 11, 52, 0, 11, 55, 0, 11, 58, 0, 11, 61, 0, 11, 64, 0, 11, 67, 0, 11, 70, 0, 11, 73, 0, 11, 76, 0, 11, 79, 0, 11, 82, 0, 11, 85, 113, -39};
        byte[] r13 = new byte[]{1, 9, -16, 0, 11, 88, 0, 11, 91, 0, 11, 94, 0, 11, 97, 0, 11, 100, 0, 11, 103, 0, 11, 106, 0, 11, 109, 0, 11, 112, 0, 11, 115, 0, 11, 118, 0, 11, 121, 0, 11, 124, 0, 11, 127, 0, 11, -126, 0, 11, -123, 0, 11, -120, 0, 11, -117, 0, 11, -113, 0, 11, -110, 0, 11, -107, 0, 11, -104, 0, 11, -101, 0, 11, -98, 0, 11, -95, 0, 11, -92, 0, 11, -89, 0, 11, -86, 0, 11, -83, 0, 11, -80, 0, 11, -77, 0, 11, -74, 0, 11, -71, 0, 11, -68, 0, 11, -65, 0, 11, -62, 0, 11, -59, 0, 11, -56, 0, 11, -53, 0, 11, -50, 0, 11, -47, 0, 11, -44, 0, 11, -41, 0, 11, -38, 0, 11, -35, 0, 11, -32, 0, 11, -29, 0, 11, -26, 0, 11, -23, 0, 11, -19, 0, 11, -16, 0, 11, -13, 0, 11, -10, 0, 11, -7, 0, 11, -4, 0, 11, -1, 0, 12, 2, 0, 12, 5, 0, 12, 8, 0, 12, 11, 0, 12, 14, 0, 12, 17, 0, 12, 20, 0, 12, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 43};
        byte[] r14 = new byte[]{1, 9, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, -38};
        byte[] r15 = new byte[]{1, 9, -16, 0, 1, 0, 0, 1, 7, 0, 1, 16, 0, 1, 25, 0, 1, 31, 0, 1, 39, 0, 1, 48, 0, 1, 57, 0, 1, 66, 0, 1, 75, 0, 1, 83, 0, 1, 92, 0, 1, 101, 0, 1, 107, 0, 1, 115, 0, 1, 124, 0, 1, -126, 0, 1, -118, 0, 1, -112, 0, 1, -103, 0, 1, -95, 0, 1, -89, 0, 1, -80, 0, 1, -72, 0, 1, -63, 0, 1, -57, 0, 1, -49, 0, 1, -40, 0, 1, -32, 0, 1, -26, 0, 1, -18, 0, 1, -9, 0, 1, -1, 0, 2, 5, 0, 2, 13, 0, 2, 22, 0, 2, 30, 0, 2, 39, 0, 2, 47, 0, 2, 55, 0, 2, 64, 0, 2, 72, 0, 2, 80, 0, 2, 92, 0, 2, 100, 0, 2, 108, 0, 2, 116, 0, 2, 125, 0, 2, -123, 0, 2, -115, 0, 2, -107, 0, 2, -98, 0, 2, -90, 0, 2, -82, 0, 2, -74, 0, 2, -63, 0, 2, -55, 0, 2, -47, 0, 2, -39, 0, 2, -30, 0, 2, -22, 0, 2, -14, 0, 2, -6, 0, 3, 2, 0, 3, 10, 0, 3, 18, 0, 3, 26, 0, 3, 34, 0, 3, 42, 0, 3, 50, 0, 3, 58, 0, 3, 66, 0, 3, 76, 0, 3, 84, 0, 3, 92, 0, 3, 100, 0, 3, 108, 0, 3, 116, 0, 3, 124, 0, 3, -124, -109, 105};
        byte[] r16 = new byte[]{1, 9, -16, 0, 3, -117, 0, 3, -109, 0, 3, -101, 0, 3, -93, 0, 3, -86, 0, 3, -78, 0, 3, -70, 0, 3, -62, 0, 3, -55, 0, 3, -47, 0, 3, -39, 0, 3, -31, 0, 3, -24, 0, 3, -16, 0, 3, -11, 0, 3, -3, 0, 4, 4, 0, 4, 12, 0, 4, 19, 0, 4, 27, 0, 4, 35, 0, 4, 42, 0, 4, 50, 0, 4, 57, 0, 4, 65, 0, 4, 72, 0, 4, 80, 0, 4, 87, 0, 4, 95, 0, 4, 102, 0, 4, 110, 0, 4, 117, 0, 4, 125, 0, 4, -124, 0, 4, -117, 0, 4, -109, 0, 4, -102, 0, 4, -95, 0, 4, -87, 0, 4, -80, 0, 4, -73, 0, 4, -65, 0, 4, -58, 0, 4, -51, 0, 4, -43, 0, 4, -36, 0, 4, -29, 0, 4, -22, 0, 4, -14, 0, 4, -7, 0, 5, 0, 0, 5, 7, 0, 5, 14, 0, 5, 22, 0, 5, 29, 0, 5, 36, 0, 5, 43, 0, 5, 50, 0, 5, 60, 0, 5, 67, 0, 5, 74, 0, 5, 81, 0, 5, 88, 0, 5, 95, 0, 5, 102, 0, 5, 109, 0, 5, 116, 0, 5, 123, 0, 5, -126, 0, 5, -119, 0, 5, -112, 0, 5, -105, 0, 5, -96, 0, 5, -89, 0, 5, -82, 0, 5, -75, 0, 5, -68, 0, 5, -62, 0, 5, -55, 0, 5, -48, 61, -22};
        byte[] r17 = new byte[]{1, 9, -16, 0, 5, -41, 0, 5, -34, 0, 5, -27, 0, 5, -21, 0, 5, -11, 0, 5, -5, 0, 6, 2, 0, 6, 9, 0, 6, 16, 0, 6, 22, 0, 6, 29, 0, 6, 36, 0, 6, 42, 0, 6, 49, 0, 6, 56, 0, 6, 62, 0, 6, 71, 0, 6, 78, 0, 6, 84, 0, 6, 91, 0, 6, 98, 0, 6, 104, 0, 6, 111, 0, 6, 117, 0, 6, 124, 0, 6, -126, 0, 6, -119, 0, 6, -112, 0, 6, -106, 0, 6, -99, 0, 6, -91, 0, 6, -84, 0, 6, -78, 0, 6, -71, 0, 6, -65, 0, 6, -59, 0, 6, -52, 0, 6, -46, 0, 6, -39, 0, 6, -33, 0, 6, -27, 0, 6, -20, 0, 6, -14, 0, 6, -8, 0, 6, -1, 0, 7, 5, 0, 7, 11, 0, 7, 18, 0, 7, 24, 0, 7, 30, 0, 7, 36, 0, 7, 43, 0, 7, 49, 0, 7, 57, 0, 7, 63, 0, 7, 70, 0, 7, 76, 0, 7, 82, 0, 7, 88, 0, 7, 94, 0, 7, 100, 0, 7, 107, 0, 7, 113, 0, 7, 119, 0, 7, 125, 0, 7, -125, 0, 7, -119, 0, 7, -113, 0, 7, -107, 0, 7, -101, 0, 7, -93, 0, 7, -87, 0, 7, -81, 0, 7, -75, 0, 7, -69, 0, 7, -63, 0, 7, -57, 0, 7, -51, 0, 7, -45, 0, 7, -39, 95, 46};
        byte[] r18 = new byte[]{1, 9, -16, 0, 7, -33, 0, 7, -25, 0, 7, -19, 0, 7, -13, 0, 7, -7, 0, 7, -2, 0, 8, 4, 0, 8, 10, 0, 8, 16, 0, 8, 22, 0, 8, 28, 0, 8, 33, 0, 8, 39, 0, 8, 45, 0, 8, 53, 0, 8, 59, 0, 8, 64, 0, 8, 70, 0, 8, 76, 0, 8, 81, 0, 8, 87, 0, 8, 93, 0, 8, 99, 0, 8, 104, 0, 8, 110, 0, 8, 116, 0, 8, 121, 0, 8, 127, 0, 8, -123, 0, 8, -118, 0, 8, -112, 0, 8, -107, 0, 8, -101, 0, 8, -95, 0, 8, -90, 0, 8, -84, 0, 8, -79, 0, 8, -73, 0, 8, -68, 0, 8, -62, 0, 8, -57, 0, 8, -51, 0, 8, -46, 0, 8, -40, 0, 8, -35, 0, 8, -29, 0, 8, -22, 0, 8, -17, 0, 8, -11, 0, 8, -6, 0, 9, 0, 0, 9, 5, 0, 9, 11, 0, 9, 16, 0, 9, 21, 0, 9, 27, 0, 9, 32, 0, 9, 37, 0, 9, 43, 0, 9, 48, 0, 9, 53, 0, 9, 59, 0, 9, 64, 0, 9, 69, 0, 9, 74, 0, 9, 80, 0, 9, 87, 0, 9, 92, 0, 9, 97, 0, 9, 102, 0, 9, 108, 0, 9, 113, 0, 9, 118, 0, 9, 123, 0, 9, -128, 0, 9, -122, 0, 9, -117, 0, 9, -112, 0, 9, -107, 0, 9, -102, 85, 42};
        byte[] r19 = new byte[]{1, 9, -16, 0, 9, -97, 0, 9, -90, 0, 9, -85, 0, 9, -80, 0, 9, -75, 0, 9, -70, 0, 9, -65, 0, 9, -59, 0, 9, -54, 0, 9, -49, 0, 9, -44, 0, 9, -39, 0, 9, -34, 0, 9, -29, 0, 9, -24, 0, 9, -19, 0, 9, -14, 0, 9, -9, 0, 9, -3, 0, 10, 2, 0, 10, 7, 0, 10, 12, 0, 10, 17, 0, 10, 22, 0, 10, 27, 0, 10, 32, 0, 10, 36, 0, 10, 41, 0, 10, 46, 0, 10, 51, 0, 10, 56, 0, 10, 61, 0, 10, 66, 0, 10, 70, 0, 10, 75, 0, 10, 80, 0, 10, 85, 0, 10, 89, 0, 10, 96, 0, 10, 101, 0, 10, 105, 0, 10, 110, 0, 10, 115, 0, 10, 120, 0, 10, 124, 0, 10, -127, 0, 10, -122, 0, 10, -118, 0, 10, -113, 0, 10, -108, 0, 10, -104, 0, 10, -99, 0, 10, -94, 0, 10, -90, 0, 10, -85, 0, 10, -80, 0, 10, -76, 0, 10, -71, 0, 10, -67, 0, 10, -62, 0, 10, -57, 0, 10, -53, 0, 10, -47, 0, 10, -42, 0, 10, -38, 0, 10, -33, 0, 10, -29, 0, 10, -24, 0, 10, -20, 0, 10, -15, 0, 10, -11, 0, 10, -6, 0, 10, -2, 0, 11, 3, 0, 11, 7, 0, 11, 12, 0, 11, 16, 0, 11, 21, 0, 11, 25, 0, 11, 30, -8, -30};
        byte[] r20 = new byte[]{1, 9, -16, 0, 11, 34, 0, 11, 38, 0, 11, 43, 0, 11, 47, 0, 11, 51, 0, 11, 56, 0, 11, 60, 0, 11, 65, 0, 11, 69, 0, 11, 73, 0, 11, 78, 0, 11, 82, 0, 11, 88, 0, 11, 92, 0, 11, 96, 0, 11, 101, 0, 11, 105, 0, 11, 109, 0, 11, 113, 0, 11, 118, 0, 11, 122, 0, 11, 126, 0, 11, -126, 0, 11, -121, 0, 11, -117, 0, 11, -113, 0, 11, -109, 0, 11, -105, 0, 11, -100, 0, 11, -96, 0, 11, -92, 0, 11, -88, 0, 11, -84, 0, 11, -80, 0, 11, -75, 0, 11, -71, 0, 11, -67, 0, 11, -63, 0, 11, -59, 0, 11, -55, 0, 11, -51, 0, 11, -47, 0, 11, -43, 0, 11, -38, 0, 11, -34, 0, 11, -30, 0, 11, -26, 0, 11, -22, 0, 11, -18, 0, 11, -14, 0, 11, -9, 0, 11, -5, 0, 11, -1, 0, 12, 3, 0, 12, 7, 0, 12, 11, 0, 12, 15, 0, 12, 19, 0, 12, 23, 0, 12, 27, 0, 12, 31, 0, 12, 35, 0, 12, 39, 0, 12, 43, 0, 12, 47, 0, 12, 51, 0, 12, 55, 0, 12, 58, 0, 12, 62, 0, 12, 66, 0, 12, 70, 0, 12, 74, 0, 12, 78, 0, 12, 82, 0, 12, 85, 0, 12, 89, 0, 12, 93, 0, 12, 97, 0, 12, 101, 0, 12, 105, 62, -24};
        byte[] r21 = new byte[]{1, 9, -16, 0, 12, 108, 0, 12, 112, 0, 12, 116, 0, 12, 120, 0, 12, 124, 0, 12, 127, 0, 12, -125, 0, 12, -121, 0, 12, -117, 0, 12, -114, 0, 12, -110, 0, 12, -105, 0, 12, -101, 0, 12, -97, 0, 12, -94, 0, 12, -90, 0, 12, -86, 0, 12, -83, 0, 12, -79, 0, 12, -75, 0, 12, -72, 0, 12, -68, 0, 12, -64, 0, 12, -61, 0, 12, -57, 0, 12, -53, 0, 12, -50, 0, 12, -46, 0, 12, -43, 0, 12, -39, 0, 12, -35, 0, 12, -32, 0, 12, -28, 0, 12, -25, 0, 12, -21, 0, 12, -17, 0, 12, -14, 0, 12, -10, 0, 12, -7, 0, 12, -3, 0, 13, 0, 0, 13, 4, 0, 13, 7, 0, 13, 11, 0, 13, 14, 0, 13, 18, 0, 13, 21, 0, 13, 25, 0, 13, 28, 0, 13, 32, 0, 13, 35, 0, 13, 39, 0, 13, 42, 0, 13, 47, 0, 13, 50, 0, 13, 54, 0, 13, 57, 0, 13, 61, 0, 13, 64, 0, 13, 68, 0, 13, 71, 0, 13, 74, 0, 13, 78, 0, 13, 81, 0, 13, 85, 0, 13, 88, 0, 13, 91, 0, 13, 95, 0, 13, 98, 0, 13, 101, 0, 13, 105, 0, 13, 108, 0, 13, 111, 0, 13, 115, 0, 13, 118, 0, 13, 121, 0, 13, 125, 0, 13, -128, 0, 13, -125, 0, 13, -121, 87, 65};
        byte[] r22 = new byte[]{1, 9, -16, 0, 13, -118, 0, 13, -115, 0, 13, -111, 0, 13, -108, 0, 13, -105, 0, 13, -102, 0, 13, -98, 0, 13, -95, 0, 13, -92, 0, 13, -89, 0, 13, -85, 0, 13, -82, 0, 13, -79, 0, 13, -76, 0, 13, -72, 0, 13, -68, 0, 13, -65, 0, 13, -62, 0, 13, -59, 0, 13, -55, 0, 13, -52, 0, 13, -49, 0, 13, -46, 0, 13, -43, 0, 13, -40, 0, 13, -36, 0, 13, -33, 0, 13, -30, 0, 13, -27, 0, 13, -24, 0, 13, -21, 0, 13, -18, 0, 13, -14, 0, 13, -11, 0, 13, -8, 0, 13, -5, 0, 13, -2, 0, 14, 1, 0, 14, 4, 0, 14, 7, 0, 14, 10, 0, 14, 13, 0, 14, 16, 0, 14, 19, 0, 14, 23, 0, 14, 26, 0, 14, 29, 0, 14, 32, 0, 14, 35, 0, 14, 38, 0, 14, 41, 0, 14, 44, 0, 14, 47, 0, 14, 50, 0, 14, 53, 0, 14, 56, 0, 14, 59, 0, 14, 63, 0, 14, 66, 0, 14, 69, 0, 14, 72, 0, 14, 75, 0, 14, 78, 0, 14, 81, 0, 14, 84, 0, 14, 87, 0, 14, 90, 0, 14, 92, 0, 14, 95, 0, 14, 98, 0, 14, 101, 0, 14, 104, 0, 14, 107, 0, 14, 110, 0, 14, 113, 0, 14, 116, 0, 14, 119, 0, 14, 122, 0, 14, 125, 0, 14, 127, 83, 72};
        byte[] r23 = new byte[]{1, 9, -16, 0, 14, -126, 0, 14, -123, 0, 14, -120, 0, 14, -117, 0, 14, -114, 0, 14, -111, 0, 14, -109, 0, 14, -106, 0, 14, -103, 0, 14, -100, 0, 14, -97, 0, 14, -94, 0, 14, -91, 0, 14, -89, 0, 14, -86, 0, 14, -83, 0, 14, -80, 0, 14, -77, 0, 14, -74, 0, 14, -71, 0, 14, -68, 0, 14, -65, 0, 14, -63, 0, 14, -60, 0, 14, -57, 0, 14, -54, 0, 14, -51, 0, 14, -49, 0, 14, -46, 0, 14, -43, 0, 14, -40, 0, 14, -38, 0, 14, -35, 0, 14, -32, 0, 14, -29, 0, 14, -27, 0, 14, -24, 0, 14, -21, 0, 14, -19, 0, 14, -16, 0, 14, -13, 0, 14, -10, 0, 14, -8, 0, 14, -5, 0, 14, -2, 0, 15, 0, 0, 15, 3, 0, 15, 6, 0, 15, 8, 0, 15, 11, 0, 15, 14, 0, 15, 16, 0, 15, 19, 0, 15, 22, 0, 15, 24, 0, 15, 27, 0, 15, 30, 0, 15, 32, 0, 15, 36, 0, 15, 39, 0, 15, 41, 0, 15, 44, 0, 15, 46, 0, 15, 49, 0, 15, 52, 0, 15, 54, 0, 15, 57, 0, 15, 60, 0, 15, 62, 0, 15, 65, 0, 15, 67, 0, 15, 70, 0, 15, 73, 0, 15, 75, 0, 15, 78, 0, 15, 80, 0, 15, 83, 0, 15, 85, 0, 15, 88, 0, 15, 91, 78, -28};
        byte[] r24 = new byte[]{1, 9, -16, 0, 15, 93, 0, 15, 96, 0, 15, 98, 0, 15, 101, 0, 15, 103, 0, 15, 106, 0, 15, 108, 0, 15, 111, 0, 15, 114, 0, 15, 116, 0, 15, 119, 0, 15, 121, 0, 15, 124, 0, 15, 126, 0, 15, -127, 0, 15, -125, 0, 15, -122, 0, 15, -119, 0, 15, -116, 0, 15, -114, 0, 15, -111, 0, 15, -109, 0, 15, -106, 0, 15, -104, 0, 15, -101, 0, 15, -99, 0, 15, -97, 0, 15, -94, 0, 15, -92, 0, 15, -89, 0, 15, -87, 0, 15, -84, 0, 15, -82, 0, 15, -79, 0, 15, -77, 0, 15, -74, 0, 15, -72, 0, 15, -69, 0, 15, -67, 0, 15, -65, 0, 15, -62, 0, 15, -60, 0, 15, -57, 0, 15, -55, 0, 15, -52, 0, 15, -50, 0, 15, -47, 0, 15, -45, 0, 15, -43, 0, 15, -40, 0, 15, -38, 0, 15, -35, 0, 15, -33, 0, 15, -31, 0, 15, -28, 0, 15, -25, 0, 15, -23, 0, 15, -20, 0, 15, -18, 0, 15, -15, 0, 15, -13, 0, 15, -11, 0, 15, -8, 0, 15, -6, 0, 15, -3, 0, 15, -1, 0, 16, 1, 0, 16, 4, 0, 16, 6, 0, 16, 8, 0, 16, 11, 0, 16, 13, 0, 16, 15, 0, 16, 18, 0, 16, 20, 0, 16, 23, 0, 16, 25, 0, 16, 27, 0, 16, 30, 0, 16, 32, -77, -35};
        byte[] r25 = new byte[]{1, 9, -16, 0, 16, 34, 0, 16, 37, 0, 16, 39, 0, 16, 41, 0, 16, 44, 0, 16, 46, 0, 16, 48, 0, 16, 51, 0, 16, 53, 0, 16, 55, 0, 16, 58, 0, 16, 60, 0, 16, 63, 0, 16, 65, 0, 16, 68, 0, 16, 70, 0, 16, 72, 0, 16, 75, 0, 16, 77, 0, 16, 79, 0, 16, 81, 0, 16, 84, 0, 16, 86, 0, 16, 88, 0, 16, 91, 0, 16, 93, 0, 16, 95, 0, 16, 97, 0, 16, 100, 0, 16, 102, 0, 16, 104, 0, 16, 107, 0, 16, 109, 0, 16, 111, 0, 16, 113, 0, 16, 116, 0, 16, 118, 0, 16, 120, 0, 16, 123, 0, 16, 125, 0, 16, 127, 0, 16, -127, 0, 16, -124, 0, 16, -122, 0, 16, -120, 0, 16, -118, 0, 16, -115, 0, 16, -113, 0, 16, -110, 0, 16, -108, 0, 16, -106, 0, 16, -103, 0, 16, -101, 0, 16, -99, 0, 16, -97, 0, 16, -94, 0, 16, -92, 0, 16, -90, 0, 16, -88, 0, 16, -85, 0, 16, -83, 0, 16, -81, 0, 16, -79, 0, 16, -76, 0, 16, -74, 0, 16, -72, 0, 16, -70, 0, 16, -67, 0, 16, -65, 0, 16, -63, 0, 16, -61, 0, 16, -59, 0, 16, -56, 0, 16, -54, 0, 16, -52, 0, 16, -50, 0, 16, -47, 0, 16, -45, 0, 16, -43, 0, 16, -41, 97, -61};
        byte[] r26 = new byte[]{1, 9, -16, 0, 16, -39, 0, 16, -36, 0, 16, -33, 0, 16, -31, 0, 16, -29, 0, 16, -27, 0, 16, -25, 0, 16, -22, 0, 16, -20, 0, 16, -18, 0, 16, -16, 0, 16, -14, 0, 16, -11, 0, 16, -9, 0, 16, -7, 0, 16, -5, 0, 16, -3, 0, 17, 0, 0, 17, 2, 0, 17, 4, 0, 17, 6, 0, 17, 8, 0, 17, 11, 0, 17, 13, 0, 17, 15, 0, 17, 17, 0, 17, 19, 0, 17, 22, 0, 17, 24, 0, 17, 26, 0, 17, 28, 0, 17, 30, 0, 17, 33, 0, 17, 35, 0, 17, 38, 0, 17, 40, 0, 17, 42, 0, 17, 44, 0, 17, 47, 0, 17, 49, 0, 17, 51, 0, 17, 53, 0, 17, 55, 0, 17, 57, 0, 17, 60, 0, 17, 62, 0, 17, 64, 0, 17, 66, 0, 17, 68, 0, 17, 71, 0, 17, 73, 0, 17, 75, 0, 17, 77, 0, 17, 79, 0, 17, 82, 0, 17, 84, 0, 17, 86, 0, 17, 88, 0, 17, 90, 0, 17, 92, 0, 17, 95, 0, 17, 97, 0, 17, 99, 0, 17, 101, 0, 17, 103, 0, 17, 106, 0, 17, 109, 0, 17, 111, 0, 17, 113, 0, 17, 115, 0, 17, 117, 0, 17, 119, 0, 17, 122, 0, 17, 124, 0, 17, 126, 0, 17, -128, 0, 17, -126, 0, 17, -123, 0, 17, -121, 0, 17, -119, 77, 89};
        byte[] r27 = new byte[]{1, 9, -16, 0, 17, -117, 0, 17, -115, 0, 17, -113, 0, 17, -110, 0, 17, -108, 0, 17, -106, 0, 17, -104, 0, 17, -102, 0, 17, -99, 0, 17, -97, 0, 17, -95, 0, 17, -93, 0, 17, -91, 0, 17, -88, 0, 17, -86, 0, 17, -84, 0, 17, -82, 0, 17, -80, 0, 17, -77, 0, 17, -75, 0, 17, -72, 0, 17, -70, 0, 17, -68, 0, 17, -66, 0, 17, -64, 0, 17, -61, 0, 17, -59, 0, 17, -57, 0, 17, -55, 0, 17, -53, 0, 17, -50, 0, 17, -48, 0, 17, -46, 0, 17, -44, 0, 17, -42, 0, 17, -39, 0, 17, -37, 0, 17, -35, 0, 17, -33, 0, 17, -31, 0, 17, -28, 0, 17, -26, 0, 17, -24, 0, 17, -22, 0, 17, -19, 0, 17, -17, 0, 17, -15, 0, 17, -13, 0, 17, -11, 0, 17, -8, 0, 17, -5, 0, 17, -3, 0, 17, -1, 0, 18, 1, 0, 18, 3, 0, 18, 6, 0, 18, 8, 0, 18, 10, 0, 18, 12, 0, 18, 15, 0, 18, 17, 0, 18, 19, 0, 18, 21, 0, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118};
        byte[] r28 = new byte[]{1, 9, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, -38};
        if (request[4]==51&&request[5]==0&&request[6]==0)return r1;
        else if (request[4]==51&&request[5]==0)return  r2;
        else if (request[4]==51&&request[5]==1)return  r3;
        else if (request[4]==51&&request[5]==2)return  r4;
        else if (request[4]==51&&request[5]==3)return  r5;
        else if (request[4]==51&&request[5]==4)return  r6;
        else if (request[4]==51&&request[5]==5)return  r7;
        else if (request[4]==51&&request[5]==6)return  r8;
        else if (request[4]==51&&request[5]==7)return  r9;
        else if (request[4]==51&&request[5]==8)return  r10;
        else if (request[4]==51&&request[5]==9)return  r11;
        else if (request[4]==51&&request[5]==10)return r12;
        else if (request[4]==51&&request[5]==11)return r13;
        else if (request[4]==51&&request[5]==12)return r14;
        else if (request[4]==49&&request[5]==0&&request[6]==0)return r15;
        else if (request[4]==49&&request[5]==0)return  r16;
        else if (request[4]==49&&request[5]==1)return  r17;
        else if (request[4]==49&&request[5]==2)return  r18;
        else if (request[4]==49&&request[5]==3)return  r19;
        else if (request[4]==49&&request[5]==4)return  r20;
        else if (request[4]==49&&request[5]==5)return  r21;
        else if (request[4]==49&&request[5]==6)return  r22;
        else if (request[4]==49&&request[5]==7)return  r23;
        else if (request[4]==49&&request[5]==8)return  r24;
        else if (request[4]==49&&request[5]==9)return  r25;
        else if (request[4]==49&&request[5]==10)return r26;
        else if (request[4]==49&&request[5]==11)return r27;
        else if (request[4]==49&&request[5]==12)return r28;
        else return null;
    }

//    E: <<< [1, 9, -16, 0, 4, -71, 0, 4, -68, 0, 4, -65, 0, 4, -62, 0, 4, -59, 0, 4, -56, 0, 4, -53, 0, 4, -50, 0, 4, -47, 0, 4, -44, 0, 4, -41, 0, 4, -38, 0, 4, -34, 0, 4, -31, 0, 4, -28, 0, 4, -25, 0, 4, -22, 0, 4, -19, 0, 4, -16, 0, 4, -13, 0, 4, -10, 0, 4, -7, 0, 4, -4, 0, 4, -1, 0, 5, 2, 0, 5, 5, 0, 5, 8, 0, 5, 11, 0, 5, 14, 0, 5, 17, 0, 5, 20, 0, 5, 23, 0, 5, 26, 0, 5, 29, 0, 5, 32, 0, 5, 35, 0, 5, 38, 0, 5, 41, 0, 5, 44, 0, 5, 47, 0, 5, 50, 0, 5, 53, 0, 5, 56, 0, 5, 59, 0, 5, 62, 0, 5, 65, 0, 5, 68, 0, 5, 71, 0, 5, 74, 0, 5, 77, 0, 5, 81, 0, 5, 84, 0, 5, 87, 0, 5, 90, 0, 5, 93, 0, 5, 96, 0, 5, 99, 0, 5, 102, 0, 5, 105, 0, 5, 108, 0, 5, 111, 0, 5, 114, 0, 5, 117, 0, 5, 120, 0, 5, 123, 0, 5, 126, 0, 5, -127, 0, 5, -124, 0, 5, -121, 0, 5, -118, 0, 5, -115, 0, 5, -112, 0, 5, -109, 0, 5, -106, 0, 5, -103, 0, 5, -100, 0, 5, -97, 0, 5, -94, 0, 5, -91, 0, 5, -88, 47, -74]
//    E: <<< [1, 9, -16, 0, 5, -85, 0, 5, -82, 0, 5, -79, 0, 5, -76, 0, 5, -73, 0, 5, -70, 0, 5, -67, 0, 5, -64, 0, 5, -61, 0, 5, -58, 0, 5, -55, 0, 5, -51, 0, 5, -48, 0, 5, -45, 0, 5, -42, 0, 5, -39, 0, 5, -36, 0, 5, -33, 0, 5, -30, 0, 5, -27, 0, 5, -24, 0, 5, -21, 0, 5, -18, 0, 5, -15, 0, 5, -12, 0, 5, -9, 0, 5, -6, 0, 5, -3, 0, 6, 0, 0, 6, 3, 0, 6, 6, 0, 6, 9, 0, 6, 12, 0, 6, 15, 0, 6, 18, 0, 6, 21, 0, 6, 24, 0, 6, 27, 0, 6, 30, 0, 6, 33, 0, 6, 36, 0, 6, 39, 0, 6, 42, 0, 6, 45, 0, 6, 48, 0, 6, 51, 0, 6, 54, 0, 6, 57, 0, 6, 60, 0, 6, 63, 0, 6, 66, 0, 6, 69, 0, 6, 72, 0, 6, 76, 0, 6, 79, 0, 6, 82, 0, 6, 85, 0, 6, 88, 0, 6, 91, 0, 6, 94, 0, 6, 97, 0, 6, 100, 0, 6, 103, 0, 6, 106, 0, 6, 109, 0, 6, 112, 0, 6, 115, 0, 6, 118, 0, 6, 121, 0, 6, 124, 0, 6, 127, 0, 6, -126, 0, 6, -123, 0, 6, -120, 0, 6, -117, 0, 6, -114, 0, 6, -111, 0, 6, -108, 0, 6, -105, 0, 6, -102, -77, 27]
//    E: <<< [1, 9, -16, 0, 6, -99, 0, 6, -96, 0, 6, -93, 0, 6, -90, 0, 6, -87, 0, 6, -84, 0, 6, -81, 0, 6, -78, 0, 6, -75, 0, 6, -72, 0, 6, -69, 0, 6, -66, 0, 6, -63, 0, 6, -60, 0, 6, -57, 0, 6, -53, 0, 6, -50, 0, 6, -47, 0, 6, -44, 0, 6, -41, 0, 6, -38, 0, 6, -35, 0, 6, -32, 0, 6, -29, 0, 6, -26, 0, 6, -23, 0, 6, -20, 0, 6, -17, 0, 6, -14, 0, 6, -11, 0, 6, -8, 0, 6, -5, 0, 6, -2, 0, 7, 1, 0, 7, 4, 0, 7, 7, 0, 7, 10, 0, 7, 13, 0, 7, 16, 0, 7, 19, 0, 7, 22, 0, 7, 25, 0, 7, 28, 0, 7, 31, 0, 7, 34, 0, 7, 37, 0, 7, 40, 0, 7, 43, 0, 7, 46, 0, 7, 49, 0, 7, 52, 0, 7, 55, 0, 7, 58, 0, 7, 61, 0, 7, 64, 0, 7, 67, 0, 7, 70, 0, 7, 74, 0, 7, 77, 0, 7, 80, 0, 7, 83, 0, 7, 86, 0, 7, 89, 0, 7, 92, 0, 7, 95, 0, 7, 98, 0, 7, 101, 0, 7, 104, 0, 7, 107, 0, 7, 110, 0, 7, 113, 0, 7, 116, 0, 7, 119, 0, 7, 122, 0, 7, 125, 0, 7, -128, 0, 7, -125, 0, 7, -122, 0, 7, -119, 0, 7, -116, -37, 70]
//    E: <<< [1, 9, -16, 0, 7, -113, 0, 7, -110, 0, 7, -107, 0, 7, -104, 0, 7, -101, 0, 7, -98, 0, 7, -95, 0, 7, -92, 0, 7, -89, 0, 7, -86, 0, 7, -83, 0, 7, -80, 0, 7, -77, 0, 7, -74, 0, 7, -71, 0, 7, -68, 0, 7, -65, 0, 7, -62, 0, 7, -58, 0, 7, -55, 0, 7, -52, 0, 7, -49, 0, 7, -46, 0, 7, -43, 0, 7, -40, 0, 7, -37, 0, 7, -34, 0, 7, -31, 0, 7, -28, 0, 7, -25, 0, 7, -22, 0, 7, -19, 0, 7, -16, 0, 7, -13, 0, 7, -10, 0, 7, -7, 0, 7, -4, 0, 7, -1, 0, 8, 2, 0, 8, 5, 0, 8, 8, 0, 8, 11, 0, 8, 14, 0, 8, 17, 0, 8, 20, 0, 8, 23, 0, 8, 26, 0, 8, 29, 0, 8, 32, 0, 8, 35, 0, 8, 38, 0, 8, 41, 0, 8, 44, 0, 8, 47, 0, 8, 50, 0, 8, 53, 0, 8, 56, 0, 8, 59, 0, 8, 63, 0, 8, 66, 0, 8, 69, 0, 8, 72, 0, 8, 75, 0, 8, 78, 0, 8, 81, 0, 8, 84, 0, 8, 87, 0, 8, 90, 0, 8, 93, 0, 8, 96, 0, 8, 99, 0, 8, 102, 0, 8, 105, 0, 8, 108, 0, 8, 111, 0, 8, 114, 0, 8, 117, 0, 8, 120, 0, 8, 123, 0, 8, 126, -21, 117]
//    E: <<< [1, 9, -16, 0, 8, -127, 0, 8, -124, 0, 8, -121, 0, 8, -118, 0, 8, -115, 0, 8, -112, 0, 8, -109, 0, 8, -106, 0, 8, -103, 0, 8, -100, 0, 8, -97, 0, 8, -94, 0, 8, -91, 0, 8, -88, 0, 8, -85, 0, 8, -82, 0, 8, -79, 0, 8, -75, 0, 8, -72, 0, 8, -69, 0, 8, -66, 0, 8, -63, 0, 8, -60, 0, 8, -57, 0, 8, -54, 0, 8, -51, 0, 8, -48, 0, 8, -45, 0, 8, -42, 0, 8, -39, 0, 8, -36, 0, 8, -33, 0, 8, -30, 0, 8, -27, 0, 8, -24, 0, 8, -21, 0, 8, -18, 0, 8, -15, 0, 8, -12, 0, 8, -9, 0, 8, -6, 0, 8, -3, 0, 9, 0, 0, 9, 3, 0, 9, 6, 0, 9, 9, 0, 9, 12, 0, 9, 15, 0, 9, 18, 0, 9, 21, 0, 9, 24, 0, 9, 27, 0, 9, 30, 0, 9, 33, 0, 9, 36, 0, 9, 40, 0, 9, 43, 0, 9, 46, 0, 9, 49, 0, 9, 52, 0, 9, 55, 0, 9, 58, 0, 9, 61, 0, 9, 64, 0, 9, 67, 0, 9, 70, 0, 9, 73, 0, 9, 76, 0, 9, 79, 0, 9, 82, 0, 9, 85, 0, 9, 88, 0, 9, 91, 0, 9, 94, 0, 9, 97, 0, 9, 100, 0, 9, 103, 0, 9, 106, 0, 9, 109, 0, 9, 112, -95, 61]
//    E: <<< [1, 9, -16, 0, 9, 115, 0, 9, 118, 0, 9, 121, 0, 9, 124, 0, 9, 127, 0, 9, -126, 0, 9, -123, 0, 9, -120, 0, 9, -117, 0, 9, -114, 0, 9, -111, 0, 9, -108, 0, 9, -104, 0, 9, -101, 0, 9, -98, 0, 9, -95, 0, 9, -92, 0, 9, -89, 0, 9, -86, 0, 9, -83, 0, 9, -80, 0, 9, -77, 0, 9, -74, 0, 9, -71, 0, 9, -68, 0, 9, -65, 0, 9, -62, 0, 9, -59, 0, 9, -56, 0, 9, -53, 0, 9, -50, 0, 9, -47, 0, 9, -44, 0, 9, -41, 0, 9, -38, 0, 9, -35, 0, 9, -32, 0, 9, -29, 0, 9, -26, 0, 9, -23, 0, 9, -20, 0, 9, -17, 0, 9, -14, 0, 9, -11, 0, 9, -8, 0, 9, -5, 0, 9, -2, 0, 10, 1, 0, 10, 5, 0, 10, 8, 0, 10, 11, 0, 10, 14, 0, 10, 17, 0, 10, 20, 0, 10, 23, 0, 10, 26, 0, 10, 29, 0, 10, 32, 0, 10, 35, 0, 10, 38, 0, 10, 41, 0, 10, 44, 0, 10, 47, 0, 10, 50, 0, 10, 53, 0, 10, 56, 0, 10, 59, 0, 10, 62, 0, 10, 65, 0, 10, 68, 0, 10, 71, 0, 10, 74, 0, 10, 77, 0, 10, 80, 0, 10, 83, 0, 10, 86, 0, 10, 89, 0, 10, 92, 0, 10, 95, 0, 10, 98, 122, 8]
//    E: <<< [1, 9, -16, 0, 10, 101, 0, 10, 104, 0, 10, 108, 0, 10, 111, 0, 10, 114, 0, 10, 117, 0, 10, 120, 0, 10, 123, 0, 10, 126, 0, 10, -127, 0, 10, -124, 0, 10, -121, 0, 10, -118, 0, 10, -115, 0, 10, -112, 0, 10, -109, 0, 10, -106, 0, 10, -103, 0, 10, -100, 0, 10, -97, 0, 10, -94, 0, 10, -91, 0, 10, -88, 0, 10, -85, 0, 10, -82, 0, 10, -79, 0, 10, -76, 0, 10, -73, 0, 10, -70, 0, 10, -67, 0, 10, -64, 0, 10, -61, 0, 10, -58, 0, 10, -55, 0, 10, -51, 0, 10, -48, 0, 10, -45, 0, 10, -42, 0, 10, -39, 0, 10, -36, 0, 10, -33, 0, 10, -30, 0, 10, -27, 0, 10, -24, 0, 10, -21, 0, 10, -18, 0, 10, -15, 0, 10, -12, 0, 10, -9, 0, 10, -6, 0, 10, -3, 0, 11, 0, 0, 11, 3, 0, 11, 6, 0, 11, 9, 0, 11, 12, 0, 11, 15, 0, 11, 18, 0, 11, 21, 0, 11, 24, 0, 11, 27, 0, 11, 30, 0, 11, 33, 0, 11, 36, 0, 11, 39, 0, 11, 42, 0, 11, 46, 0, 11, 49, 0, 11, 52, 0, 11, 55, 0, 11, 58, 0, 11, 61, 0, 11, 64, 0, 11, 67, 0, 11, 70, 0, 11, 73, 0, 11, 76, 0, 11, 79, 0, 11, 82, 0, 11, 85, 113, -39]
//    E: <<< [1, 9, -16, 0, 11, 88, 0, 11, 91, 0, 11, 94, 0, 11, 97, 0, 11, 100, 0, 11, 103, 0, 11, 106, 0, 11, 109, 0, 11, 112, 0, 11, 115, 0, 11, 118, 0, 11, 121, 0, 11, 124, 0, 11, 127, 0, 11, -126, 0, 11, -123, 0, 11, -120, 0, 11, -117, 0, 11, -113, 0, 11, -110, 0, 11, -107, 0, 11, -104, 0, 11, -101, 0, 11, -98, 0, 11, -95, 0, 11, -92, 0, 11, -89, 0, 11, -86, 0, 11, -83, 0, 11, -80, 0, 11, -77, 0, 11, -74, 0, 11, -71, 0, 11, -68, 0, 11, -65, 0, 11, -62, 0, 11, -59, 0, 11, -56, 0, 11, -53, 0, 11, -50, 0, 11, -47, 0, 11, -44, 0, 11, -41, 0, 11, -38, 0, 11, -35, 0, 11, -32, 0, 11, -29, 0, 11, -26, 0, 11, -23, 0, 11, -19, 0, 11, -16, 0, 11, -13, 0, 11, -10, 0, 11, -7, 0, 11, -4, 0, 11, -1, 0, 12, 2, 0, 12, 5, 0, 12, 8, 0, 12, 11, 0, 12, 14, 0, 12, 17, 0, 12, 20, 0, 12, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 43]
//    E: <<< [1, 9, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, -38]
//    E: <<< [1, 9, -16, 0, 1, 0, 0, 1, 7, 0, 1, 16, 0, 1, 25, 0, 1, 31, 0, 1, 39, 0, 1, 48, 0, 1, 57, 0, 1, 66, 0, 1, 75, 0, 1, 83, 0, 1, 92, 0, 1, 101, 0, 1, 107, 0, 1, 115, 0, 1, 124, 0, 1, -126, 0, 1, -118, 0, 1, -112, 0, 1, -103, 0, 1, -95, 0, 1, -89, 0, 1, -80, 0, 1, -72, 0, 1, -63, 0, 1, -57, 0, 1, -49, 0, 1, -40, 0, 1, -32, 0, 1, -26, 0, 1, -18, 0, 1, -9, 0, 1, -1, 0, 2, 5, 0, 2, 13, 0, 2, 22, 0, 2, 30, 0, 2, 39, 0, 2, 47, 0, 2, 55, 0, 2, 64, 0, 2, 72, 0, 2, 80, 0, 2, 92, 0, 2, 100, 0, 2, 108, 0, 2, 116, 0, 2, 125, 0, 2, -123, 0, 2, -115, 0, 2, -107, 0, 2, -98, 0, 2, -90, 0, 2, -82, 0, 2, -74, 0, 2, -63, 0, 2, -55, 0, 2, -47, 0, 2, -39, 0, 2, -30, 0, 2, -22, 0, 2, -14, 0, 2, -6, 0, 3, 2, 0, 3, 10, 0, 3, 18, 0, 3, 26, 0, 3, 34, 0, 3, 42, 0, 3, 50, 0, 3, 58, 0, 3, 66, 0, 3, 76, 0, 3, 84, 0, 3, 92, 0, 3, 100, 0, 3, 108, 0, 3, 116, 0, 3, 124, 0, 3, -124, -109, 105]
//    E: <<< [1, 9, -16, 0, 3, -117, 0, 3, -109, 0, 3, -101, 0, 3, -93, 0, 3, -86, 0, 3, -78, 0, 3, -70, 0, 3, -62, 0, 3, -55, 0, 3, -47, 0, 3, -39, 0, 3, -31, 0, 3, -24, 0, 3, -16, 0, 3, -11, 0, 3, -3, 0, 4, 4, 0, 4, 12, 0, 4, 19, 0, 4, 27, 0, 4, 35, 0, 4, 42, 0, 4, 50, 0, 4, 57, 0, 4, 65, 0, 4, 72, 0, 4, 80, 0, 4, 87, 0, 4, 95, 0, 4, 102, 0, 4, 110, 0, 4, 117, 0, 4, 125, 0, 4, -124, 0, 4, -117, 0, 4, -109, 0, 4, -102, 0, 4, -95, 0, 4, -87, 0, 4, -80, 0, 4, -73, 0, 4, -65, 0, 4, -58, 0, 4, -51, 0, 4, -43, 0, 4, -36, 0, 4, -29, 0, 4, -22, 0, 4, -14, 0, 4, -7, 0, 5, 0, 0, 5, 7, 0, 5, 14, 0, 5, 22, 0, 5, 29, 0, 5, 36, 0, 5, 43, 0, 5, 50, 0, 5, 60, 0, 5, 67, 0, 5, 74, 0, 5, 81, 0, 5, 88, 0, 5, 95, 0, 5, 102, 0, 5, 109, 0, 5, 116, 0, 5, 123, 0, 5, -126, 0, 5, -119, 0, 5, -112, 0, 5, -105, 0, 5, -96, 0, 5, -89, 0, 5, -82, 0, 5, -75, 0, 5, -68, 0, 5, -62, 0, 5, -55, 0, 5, -48, 61, -22]
//    E: <<< [1, 9, -16, 0, 5, -41, 0, 5, -34, 0, 5, -27, 0, 5, -21, 0, 5, -11, 0, 5, -5, 0, 6, 2, 0, 6, 9, 0, 6, 16, 0, 6, 22, 0, 6, 29, 0, 6, 36, 0, 6, 42, 0, 6, 49, 0, 6, 56, 0, 6, 62, 0, 6, 71, 0, 6, 78, 0, 6, 84, 0, 6, 91, 0, 6, 98, 0, 6, 104, 0, 6, 111, 0, 6, 117, 0, 6, 124, 0, 6, -126, 0, 6, -119, 0, 6, -112, 0, 6, -106, 0, 6, -99, 0, 6, -91, 0, 6, -84, 0, 6, -78, 0, 6, -71, 0, 6, -65, 0, 6, -59, 0, 6, -52, 0, 6, -46, 0, 6, -39, 0, 6, -33, 0, 6, -27, 0, 6, -20, 0, 6, -14, 0, 6, -8, 0, 6, -1, 0, 7, 5, 0, 7, 11, 0, 7, 18, 0, 7, 24, 0, 7, 30, 0, 7, 36, 0, 7, 43, 0, 7, 49, 0, 7, 57, 0, 7, 63, 0, 7, 70, 0, 7, 76, 0, 7, 82, 0, 7, 88, 0, 7, 94, 0, 7, 100, 0, 7, 107, 0, 7, 113, 0, 7, 119, 0, 7, 125, 0, 7, -125, 0, 7, -119, 0, 7, -113, 0, 7, -107, 0, 7, -101, 0, 7, -93, 0, 7, -87, 0, 7, -81, 0, 7, -75, 0, 7, -69, 0, 7, -63, 0, 7, -57, 0, 7, -51, 0, 7, -45, 0, 7, -39, 95, 46]
//    E: <<< [1, 9, -16, 0, 7, -33, 0, 7, -25, 0, 7, -19, 0, 7, -13, 0, 7, -7, 0, 7, -2, 0, 8, 4, 0, 8, 10, 0, 8, 16, 0, 8, 22, 0, 8, 28, 0, 8, 33, 0, 8, 39, 0, 8, 45, 0, 8, 53, 0, 8, 59, 0, 8, 64, 0, 8, 70, 0, 8, 76, 0, 8, 81, 0, 8, 87, 0, 8, 93, 0, 8, 99, 0, 8, 104, 0, 8, 110, 0, 8, 116, 0, 8, 121, 0, 8, 127, 0, 8, -123, 0, 8, -118, 0, 8, -112, 0, 8, -107, 0, 8, -101, 0, 8, -95, 0, 8, -90, 0, 8, -84, 0, 8, -79, 0, 8, -73, 0, 8, -68, 0, 8, -62, 0, 8, -57, 0, 8, -51, 0, 8, -46, 0, 8, -40, 0, 8, -35, 0, 8, -29, 0, 8, -22, 0, 8, -17, 0, 8, -11, 0, 8, -6, 0, 9, 0, 0, 9, 5, 0, 9, 11, 0, 9, 16, 0, 9, 21, 0, 9, 27, 0, 9, 32, 0, 9, 37, 0, 9, 43, 0, 9, 48, 0, 9, 53, 0, 9, 59, 0, 9, 64, 0, 9, 69, 0, 9, 74, 0, 9, 80, 0, 9, 87, 0, 9, 92, 0, 9, 97, 0, 9, 102, 0, 9, 108, 0, 9, 113, 0, 9, 118, 0, 9, 123, 0, 9, -128, 0, 9, -122, 0, 9, -117, 0, 9, -112, 0, 9, -107, 0, 9, -102, 85, 42]
//    E: <<< [1, 9, -16, 0, 9, -97, 0, 9, -90, 0, 9, -85, 0, 9, -80, 0, 9, -75, 0, 9, -70, 0, 9, -65, 0, 9, -59, 0, 9, -54, 0, 9, -49, 0, 9, -44, 0, 9, -39, 0, 9, -34, 0, 9, -29, 0, 9, -24, 0, 9, -19, 0, 9, -14, 0, 9, -9, 0, 9, -3, 0, 10, 2, 0, 10, 7, 0, 10, 12, 0, 10, 17, 0, 10, 22, 0, 10, 27, 0, 10, 32, 0, 10, 36, 0, 10, 41, 0, 10, 46, 0, 10, 51, 0, 10, 56, 0, 10, 61, 0, 10, 66, 0, 10, 70, 0, 10, 75, 0, 10, 80, 0, 10, 85, 0, 10, 89, 0, 10, 96, 0, 10, 101, 0, 10, 105, 0, 10, 110, 0, 10, 115, 0, 10, 120, 0, 10, 124, 0, 10, -127, 0, 10, -122, 0, 10, -118, 0, 10, -113, 0, 10, -108, 0, 10, -104, 0, 10, -99, 0, 10, -94, 0, 10, -90, 0, 10, -85, 0, 10, -80, 0, 10, -76, 0, 10, -71, 0, 10, -67, 0, 10, -62, 0, 10, -57, 0, 10, -53, 0, 10, -47, 0, 10, -42, 0, 10, -38, 0, 10, -33, 0, 10, -29, 0, 10, -24, 0, 10, -20, 0, 10, -15, 0, 10, -11, 0, 10, -6, 0, 10, -2, 0, 11, 3, 0, 11, 7, 0, 11, 12, 0, 11, 16, 0, 11, 21, 0, 11, 25, 0, 11, 30, -8, -30]
//    E: <<< [1, 9, -16, 0, 11, 34, 0, 11, 38, 0, 11, 43, 0, 11, 47, 0, 11, 51, 0, 11, 56, 0, 11, 60, 0, 11, 65, 0, 11, 69, 0, 11, 73, 0, 11, 78, 0, 11, 82, 0, 11, 88, 0, 11, 92, 0, 11, 96, 0, 11, 101, 0, 11, 105, 0, 11, 109, 0, 11, 113, 0, 11, 118, 0, 11, 122, 0, 11, 126, 0, 11, -126, 0, 11, -121, 0, 11, -117, 0, 11, -113, 0, 11, -109, 0, 11, -105, 0, 11, -100, 0, 11, -96, 0, 11, -92, 0, 11, -88, 0, 11, -84, 0, 11, -80, 0, 11, -75, 0, 11, -71, 0, 11, -67, 0, 11, -63, 0, 11, -59, 0, 11, -55, 0, 11, -51, 0, 11, -47, 0, 11, -43, 0, 11, -38, 0, 11, -34, 0, 11, -30, 0, 11, -26, 0, 11, -22, 0, 11, -18, 0, 11, -14, 0, 11, -9, 0, 11, -5, 0, 11, -1, 0, 12, 3, 0, 12, 7, 0, 12, 11, 0, 12, 15, 0, 12, 19, 0, 12, 23, 0, 12, 27, 0, 12, 31, 0, 12, 35, 0, 12, 39, 0, 12, 43, 0, 12, 47, 0, 12, 51, 0, 12, 55, 0, 12, 58, 0, 12, 62, 0, 12, 66, 0, 12, 70, 0, 12, 74, 0, 12, 78, 0, 12, 82, 0, 12, 85, 0, 12, 89, 0, 12, 93, 0, 12, 97, 0, 12, 101, 0, 12, 105, 62, -24]
//    E: <<< [1, 9, -16, 0, 12, 108, 0, 12, 112, 0, 12, 116, 0, 12, 120, 0, 12, 124, 0, 12, 127, 0, 12, -125, 0, 12, -121, 0, 12, -117, 0, 12, -114, 0, 12, -110, 0, 12, -105, 0, 12, -101, 0, 12, -97, 0, 12, -94, 0, 12, -90, 0, 12, -86, 0, 12, -83, 0, 12, -79, 0, 12, -75, 0, 12, -72, 0, 12, -68, 0, 12, -64, 0, 12, -61, 0, 12, -57, 0, 12, -53, 0, 12, -50, 0, 12, -46, 0, 12, -43, 0, 12, -39, 0, 12, -35, 0, 12, -32, 0, 12, -28, 0, 12, -25, 0, 12, -21, 0, 12, -17, 0, 12, -14, 0, 12, -10, 0, 12, -7, 0, 12, -3, 0, 13, 0, 0, 13, 4, 0, 13, 7, 0, 13, 11, 0, 13, 14, 0, 13, 18, 0, 13, 21, 0, 13, 25, 0, 13, 28, 0, 13, 32, 0, 13, 35, 0, 13, 39, 0, 13, 42, 0, 13, 47, 0, 13, 50, 0, 13, 54, 0, 13, 57, 0, 13, 61, 0, 13, 64, 0, 13, 68, 0, 13, 71, 0, 13, 74, 0, 13, 78, 0, 13, 81, 0, 13, 85, 0, 13, 88, 0, 13, 91, 0, 13, 95, 0, 13, 98, 0, 13, 101, 0, 13, 105, 0, 13, 108, 0, 13, 111, 0, 13, 115, 0, 13, 118, 0, 13, 121, 0, 13, 125, 0, 13, -128, 0, 13, -125, 0, 13, -121, 87, 65]
//    E: <<< [1, 9, -16, 0, 13, -118, 0, 13, -115, 0, 13, -111, 0, 13, -108, 0, 13, -105, 0, 13, -102, 0, 13, -98, 0, 13, -95, 0, 13, -92, 0, 13, -89, 0, 13, -85, 0, 13, -82, 0, 13, -79, 0, 13, -76, 0, 13, -72, 0, 13, -68, 0, 13, -65, 0, 13, -62, 0, 13, -59, 0, 13, -55, 0, 13, -52, 0, 13, -49, 0, 13, -46, 0, 13, -43, 0, 13, -40, 0, 13, -36, 0, 13, -33, 0, 13, -30, 0, 13, -27, 0, 13, -24, 0, 13, -21, 0, 13, -18, 0, 13, -14, 0, 13, -11, 0, 13, -8, 0, 13, -5, 0, 13, -2, 0, 14, 1, 0, 14, 4, 0, 14, 7, 0, 14, 10, 0, 14, 13, 0, 14, 16, 0, 14, 19, 0, 14, 23, 0, 14, 26, 0, 14, 29, 0, 14, 32, 0, 14, 35, 0, 14, 38, 0, 14, 41, 0, 14, 44, 0, 14, 47, 0, 14, 50, 0, 14, 53, 0, 14, 56, 0, 14, 59, 0, 14, 63, 0, 14, 66, 0, 14, 69, 0, 14, 72, 0, 14, 75, 0, 14, 78, 0, 14, 81, 0, 14, 84, 0, 14, 87, 0, 14, 90, 0, 14, 92, 0, 14, 95, 0, 14, 98, 0, 14, 101, 0, 14, 104, 0, 14, 107, 0, 14, 110, 0, 14, 113, 0, 14, 116, 0, 14, 119, 0, 14, 122, 0, 14, 125, 0, 14, 127, 83, 72]
//    E: <<< [1, 9, -16, 0, 14, -126, 0, 14, -123, 0, 14, -120, 0, 14, -117, 0, 14, -114, 0, 14, -111, 0, 14, -109, 0, 14, -106, 0, 14, -103, 0, 14, -100, 0, 14, -97, 0, 14, -94, 0, 14, -91, 0, 14, -89, 0, 14, -86, 0, 14, -83, 0, 14, -80, 0, 14, -77, 0, 14, -74, 0, 14, -71, 0, 14, -68, 0, 14, -65, 0, 14, -63, 0, 14, -60, 0, 14, -57, 0, 14, -54, 0, 14, -51, 0, 14, -49, 0, 14, -46, 0, 14, -43, 0, 14, -40, 0, 14, -38, 0, 14, -35, 0, 14, -32, 0, 14, -29, 0, 14, -27, 0, 14, -24, 0, 14, -21, 0, 14, -19, 0, 14, -16, 0, 14, -13, 0, 14, -10, 0, 14, -8, 0, 14, -5, 0, 14, -2, 0, 15, 0, 0, 15, 3, 0, 15, 6, 0, 15, 8, 0, 15, 11, 0, 15, 14, 0, 15, 16, 0, 15, 19, 0, 15, 22, 0, 15, 24, 0, 15, 27, 0, 15, 30, 0, 15, 32, 0, 15, 36, 0, 15, 39, 0, 15, 41, 0, 15, 44, 0, 15, 46, 0, 15, 49, 0, 15, 52, 0, 15, 54, 0, 15, 57, 0, 15, 60, 0, 15, 62, 0, 15, 65, 0, 15, 67, 0, 15, 70, 0, 15, 73, 0, 15, 75, 0, 15, 78, 0, 15, 80, 0, 15, 83, 0, 15, 85, 0, 15, 88, 0, 15, 91, 78, -28]
//    E: <<< [1, 9, -16, 0, 15, 93, 0, 15, 96, 0, 15, 98, 0, 15, 101, 0, 15, 103, 0, 15, 106, 0, 15, 108, 0, 15, 111, 0, 15, 114, 0, 15, 116, 0, 15, 119, 0, 15, 121, 0, 15, 124, 0, 15, 126, 0, 15, -127, 0, 15, -125, 0, 15, -122, 0, 15, -119, 0, 15, -116, 0, 15, -114, 0, 15, -111, 0, 15, -109, 0, 15, -106, 0, 15, -104, 0, 15, -101, 0, 15, -99, 0, 15, -97, 0, 15, -94, 0, 15, -92, 0, 15, -89, 0, 15, -87, 0, 15, -84, 0, 15, -82, 0, 15, -79, 0, 15, -77, 0, 15, -74, 0, 15, -72, 0, 15, -69, 0, 15, -67, 0, 15, -65, 0, 15, -62, 0, 15, -60, 0, 15, -57, 0, 15, -55, 0, 15, -52, 0, 15, -50, 0, 15, -47, 0, 15, -45, 0, 15, -43, 0, 15, -40, 0, 15, -38, 0, 15, -35, 0, 15, -33, 0, 15, -31, 0, 15, -28, 0, 15, -25, 0, 15, -23, 0, 15, -20, 0, 15, -18, 0, 15, -15, 0, 15, -13, 0, 15, -11, 0, 15, -8, 0, 15, -6, 0, 15, -3, 0, 15, -1, 0, 16, 1, 0, 16, 4, 0, 16, 6, 0, 16, 8, 0, 16, 11, 0, 16, 13, 0, 16, 15, 0, 16, 18, 0, 16, 20, 0, 16, 23, 0, 16, 25, 0, 16, 27, 0, 16, 30, 0, 16, 32, -77, -35]
//    E: <<< [1, 9, -16, 0, 16, 34, 0, 16, 37, 0, 16, 39, 0, 16, 41, 0, 16, 44, 0, 16, 46, 0, 16, 48, 0, 16, 51, 0, 16, 53, 0, 16, 55, 0, 16, 58, 0, 16, 60, 0, 16, 63, 0, 16, 65, 0, 16, 68, 0, 16, 70, 0, 16, 72, 0, 16, 75, 0, 16, 77, 0, 16, 79, 0, 16, 81, 0, 16, 84, 0, 16, 86, 0, 16, 88, 0, 16, 91, 0, 16, 93, 0, 16, 95, 0, 16, 97, 0, 16, 100, 0, 16, 102, 0, 16, 104, 0, 16, 107, 0, 16, 109, 0, 16, 111, 0, 16, 113, 0, 16, 116, 0, 16, 118, 0, 16, 120, 0, 16, 123, 0, 16, 125, 0, 16, 127, 0, 16, -127, 0, 16, -124, 0, 16, -122, 0, 16, -120, 0, 16, -118, 0, 16, -115, 0, 16, -113, 0, 16, -110, 0, 16, -108, 0, 16, -106, 0, 16, -103, 0, 16, -101, 0, 16, -99, 0, 16, -97, 0, 16, -94, 0, 16, -92, 0, 16, -90, 0, 16, -88, 0, 16, -85, 0, 16, -83, 0, 16, -81, 0, 16, -79, 0, 16, -76, 0, 16, -74, 0, 16, -72, 0, 16, -70, 0, 16, -67, 0, 16, -65, 0, 16, -63, 0, 16, -61, 0, 16, -59, 0, 16, -56, 0, 16, -54, 0, 16, -52, 0, 16, -50, 0, 16, -47, 0, 16, -45, 0, 16, -43, 0, 16, -41, 97, -61]
//    E: <<< [1, 9, -16, 0, 16, -39, 0, 16, -36, 0, 16, -33, 0, 16, -31, 0, 16, -29, 0, 16, -27, 0, 16, -25, 0, 16, -22, 0, 16, -20, 0, 16, -18, 0, 16, -16, 0, 16, -14, 0, 16, -11, 0, 16, -9, 0, 16, -7, 0, 16, -5, 0, 16, -3, 0, 17, 0, 0, 17, 2, 0, 17, 4, 0, 17, 6, 0, 17, 8, 0, 17, 11, 0, 17, 13, 0, 17, 15, 0, 17, 17, 0, 17, 19, 0, 17, 22, 0, 17, 24, 0, 17, 26, 0, 17, 28, 0, 17, 30, 0, 17, 33, 0, 17, 35, 0, 17, 38, 0, 17, 40, 0, 17, 42, 0, 17, 44, 0, 17, 47, 0, 17, 49, 0, 17, 51, 0, 17, 53, 0, 17, 55, 0, 17, 57, 0, 17, 60, 0, 17, 62, 0, 17, 64, 0, 17, 66, 0, 17, 68, 0, 17, 71, 0, 17, 73, 0, 17, 75, 0, 17, 77, 0, 17, 79, 0, 17, 82, 0, 17, 84, 0, 17, 86, 0, 17, 88, 0, 17, 90, 0, 17, 92, 0, 17, 95, 0, 17, 97, 0, 17, 99, 0, 17, 101, 0, 17, 103, 0, 17, 106, 0, 17, 109, 0, 17, 111, 0, 17, 113, 0, 17, 115, 0, 17, 117, 0, 17, 119, 0, 17, 122, 0, 17, 124, 0, 17, 126, 0, 17, -128, 0, 17, -126, 0, 17, -123, 0, 17, -121, 0, 17, -119, 77, 89]
//    E: <<< [1, 9, -16, 0, 17, -117, 0, 17, -115, 0, 17, -113, 0, 17, -110, 0, 17, -108, 0, 17, -106, 0, 17, -104, 0, 17, -102, 0, 17, -99, 0, 17, -97, 0, 17, -95, 0, 17, -93, 0, 17, -91, 0, 17, -88, 0, 17, -86, 0, 17, -84, 0, 17, -82, 0, 17, -80, 0, 17, -77, 0, 17, -75, 0, 17, -72, 0, 17, -70, 0, 17, -68, 0, 17, -66, 0, 17, -64, 0, 17, -61, 0, 17, -59, 0, 17, -57, 0, 17, -55, 0, 17, -53, 0, 17, -50, 0, 17, -48, 0, 17, -46, 0, 17, -44, 0, 17, -42, 0, 17, -39, 0, 17, -37, 0, 17, -35, 0, 17, -33, 0, 17, -31, 0, 17, -28, 0, 17, -26, 0, 17, -24, 0, 17, -22, 0, 17, -19, 0, 17, -17, 0, 17, -15, 0, 17, -13, 0, 17, -11, 0, 17, -8, 0, 17, -5, 0, 17, -3, 0, 17, -1, 0, 18, 1, 0, 18, 3, 0, 18, 6, 0, 18, 8, 0, 18, 10, 0, 18, 12, 0, 18, 15, 0, 18, 17, 0, 18, 19, 0, 18, 21, 0, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118]
//    E: <<< [1, 9, -48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, -38]



//    E: >>> [1, 5, 0, 6, -1, 0, 59, 108]
//    E: ------------------------------------
//    E: |  adapterLevel: 92, pdaLevel: 100
//    E: |  isAdapterPowerConnected(): false
//    E: |  isPDAPowerConnected(): false
//    E: ------------------------------------
//    E: <<< [1, 5, 0, 6, -1, 0, 59, 108]


    private static byte[] getCalibrationDataSample(byte[] request) {
        return new byte[]{1, 18, 2, 1, 37, 51, 125};
    }

    private byte[] getDataRegisters(byte[] request) {
        //return new byte[]{1, 4, -98, 0, 5, 25, -48, 0, 0, 1, 101, 67, -94, 48, -39, 64, -107, 92, -5, 51, -57, 39, -44, 65, 24, -80, 72, 47, -96, -88, -118, 0, 0, 0, 0, 0, 92, 0, 93, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 19, 3, 19, 0, 0, 0, 0, 15, 15, 0, 24, 2, -105, -1, -9, 0, -87, 0, -87, 0, 12, 0, 8, 0, -73, 0, -73, 0, 48, 42, -51, 0, 48, 12, -26, 0, 48, 42, -61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, -22, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 101, -78, -72};
        return dataRegister.getRegisterData();
    }

    private static byte[] getDeviceId(byte[] request) {
        return new byte[]{1, 17, 18, 48, 0, 1, 114, 21, 10, 4, 0, 12, 0, 12, 6, 0, 0, 0, 0, 0, 0, 51, 46};
    }

}
